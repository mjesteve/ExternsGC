/** @externs */
/** @suppress {duplicate,checkTypes,externsValidation,uselessCode} */

/** Namespace global cuando se usa como script. */
/** @const */
var inspiretree = {};

/** Formas CommonJS (declaraciones, sin asignaciones). */
/** @const {!Object} */ var module;
/** @type {*} */ module.exports;
/** @const {!Object} */ var exports;

/** Alias que Closure usa tras reescritura CJS (declaración únicamente). */
/** @const */ var module$exports$inspiretree;

/**
 * @externs
 * @suppress {checkTypes,const,duplicate,missingOverride}
 */
// NOTE: generated by tsickle, do not edit.
// Generated from: inspire-tree-royale.d.ts
/** @const */
var inspiretree = {};
/**
 * @record
 * @struct
 */
inspiretree.NodeIteratee = function() {};

/* TODO: CallSignature: inspiretree */
/**
 * @record
 * @struct
 */
inspiretree.MatchProcessor = function() {};

/* TODO: CallSignature: inspiretree */
/**
 * @record
 * @struct
 */
inspiretree.SearchMatcher = function() {};

/* TODO: CallSignature: inspiretree */
/**
 * @record
 * @struct
 */
inspiretree.Listener = function() {};

/* TODO: CallSignature: inspiretree */
/**
 * @record
 * @struct
 */
inspiretree.EventAndListener = function() {};

/* TODO: CallSignature: inspiretree */

/** @typedef {?} */
inspiretree.NodeConfigs;

/** @typedef {?} */
inspiretree.NodeConfigsPromise;

/** @typedef {function(!inspiretree.TreeNode): ?} */
inspiretree.NodeConfigsFunctionResolver;

/** @typedef {function(!inspiretree.TreeNode, function(?): void, function(?): void): void} */
inspiretree.NodeConfigsResolver;

/** @typedef {?} */
inspiretree.NodeConfigsProvider;
/**
 * @record
 * @struct
 */
inspiretree.Config = function() {};
/** @type {?|undefined} */
inspiretree.Config.prototype.allowLoadEvents;
/** @type {boolean} */
inspiretree.Config.prototype.cancelEditOnBlur;
/** @type {boolean} */
inspiretree.Config.prototype.contextMenu;
/** @type {?} */
inspiretree.Config.prototype.data;
/** @type {boolean} */
inspiretree.Config.prototype.deferredLoading;
/** @type {boolean} */
inspiretree.Config.prototype.editable;
/** @type {{add: boolean, edit: boolean, remove: boolean}} */
inspiretree.Config.prototype.editing;
/** @type {{resetStateOnRestore: boolean}} */
inspiretree.Config.prototype.nodes;
/** @type {{limit: number}} */
inspiretree.Config.prototype.pagination;
/** @type {?|undefined} */
inspiretree.Config.prototype.renderer;
/** @type {{matcher: !inspiretree.SearchMatcher, matchProcess: !inspiretree.MatchProcessor}} */
inspiretree.Config.prototype.search;
/** @type {{allow: !inspiretree.NodeIteratee, autoDeselect: boolean, autoSelectChildren: boolean, disableDirectDeselection: boolean, mode: string, multiple: boolean, require: boolean, checkedIsSelected: boolean}} */
inspiretree.Config.prototype.selection;
/** @type {string} */
inspiretree.Config.prototype.sort;
/**
 * @record
 * @struct
 */
inspiretree.NodeConfig = function() {};
/** @type {?|undefined} */
inspiretree.NodeConfig.prototype.children;
/** @type {string} */
inspiretree.NodeConfig.prototype.id;
/** @type {string} */
inspiretree.NodeConfig.prototype.text;
/** @type {{a: {attributes: ?}, icon: string, li: {attributes: ?}, state: ?}} */
inspiretree.NodeConfig.prototype.itree;
/**
 * @record
 * @struct
 */
inspiretree.Pagination = function() {};
/** @type {number} */
inspiretree.Pagination.prototype.limit;
/** @type {number} */
inspiretree.Pagination.prototype.total;
/**
 * @record
 * @struct
 */
inspiretree.TreeEvents = function() {};

/* TODO: PropertySignature: inspiretree.'changes.applied' */

/* TODO: PropertySignature: inspiretree.'children.loaded' */

/* TODO: PropertySignature: inspiretree.'data.loaded' */

/* TODO: PropertySignature: inspiretree.'data.loaderror' */

/* TODO: PropertySignature: inspiretree.'model.loaded' */

/* TODO: PropertySignature: inspiretree.'node.added' */

/* TODO: PropertySignature: inspiretree.'node.click' */

/* TODO: PropertySignature: inspiretree.'node.contextmenu' */

/* TODO: PropertySignature: inspiretree.'node.blurred' */

/* TODO: PropertySignature: inspiretree.'node.checked' */

/* TODO: PropertySignature: inspiretree.'node.collapsed' */

/* TODO: PropertySignature: inspiretree.'node.deselected' */

/* TODO: PropertySignature: inspiretree.'node.edited' */

/* TODO: PropertySignature: inspiretree.'node.expanded' */

/* TODO: PropertySignature: inspiretree.'node.focused' */

/* TODO: PropertySignature: inspiretree.'node.hidden' */

/* TODO: PropertySignature: inspiretree.'node.moved' */

/* TODO: PropertySignature: inspiretree.'node.paginated' */

/* TODO: PropertySignature: inspiretree.'node.property.changed' */

/* TODO: PropertySignature: inspiretree.'node.removed' */

/* TODO: PropertySignature: inspiretree.'node.restored' */

/* TODO: PropertySignature: inspiretree.'node.selected' */

/* TODO: PropertySignature: inspiretree.'node.state.changed' */

/* TODO: PropertySignature: inspiretree.'node.shown' */

/* TODO: PropertySignature: inspiretree.'node.softremoved' */

/* TODO: PropertySignature: inspiretree.'node.unchecked' */
/**
 * @record
 * @struct
 */
inspiretree.InspireTree = function() {};

/**
 * @public
 * @template E
 * @param {(?|E)} event
 * @param {...?} values
 * @return {boolean}
 */
inspiretree.InspireTree.prototype.emit = function(event, values) {};

/**
 * @public
 * @template E
 * @param {(?|E)} event
 * @param {...?} values
 * @return {?}
 */
inspiretree.InspireTree.prototype.emitAsync = function(event, values) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {E} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.addListener = function(event, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {E} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.on = function(event, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {(?|E)} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.prependListener = function(event, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {E} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.once = function(event, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {(?|E)} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.prependOnceListener = function(event, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {(?|E)} event
 * @param {number} timesToListen
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.many = function(event, timesToListen, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {(?|E)} event
 * @param {number} timesToListen
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.prependMany = function(event, timesToListen, listener) {};

/**
 * @public
 * @template THIS
 * @this {THIS}
 * @param {!inspiretree.EventAndListener} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.onAny = function(listener) {};

/**
 * @public
 * @template THIS
 * @this {THIS}
 * @param {!inspiretree.EventAndListener} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.prependAny = function(listener) {};

/**
 * @public
 * @template THIS
 * @this {THIS}
 * @param {!inspiretree.Listener} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.offAny = function(listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {(?|E)} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.removeListener = function(event, listener) {};

/**
 * @public
 * @template THIS,E
 * @this {THIS}
 * @param {E} event
 * @param {?} listener
 * @return {THIS}
 */
inspiretree.InspireTree.prototype.off = function(event, listener) {};
/** @type {(string|number)} */
inspiretree.InspireTree.prototype.id;
/** @type {!inspiretree.Config} */
inspiretree.InspireTree.prototype.config;
/** @type {boolean} */
inspiretree.InspireTree.prototype.preventDeselection;

/**
 * @public
 * @param {!inspiretree.NodeConfig} node
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.addNode = function(node) {};

/**
 * @public
 * @param {?} node
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.addNodes = function(node) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.available = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.blur = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.blurDeep = function() {};

/**
 * @public
 * @param {!inspiretree.TreeNode} first
 * @param {!inspiretree.TreeNode} second
 * @return {!Array<?>}
 */
inspiretree.InspireTree.prototype.boundingNodes = function(first, second) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.InspireTree.prototype.canAutoDeselect = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.checked = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.clean = function() {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.clearSearch = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.clone = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.collapse = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.collapsed = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.collapseDeep = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.context = function() {};

/**
 * @public
 * @param {!inspiretree.InspireTree} dest
 * @param {boolean=} hierarchy
 * @param {boolean=} includeState
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.copy = function(dest, hierarchy, includeState) {};

/**
 * @public
 * @param {?} obj
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.createNode = function(obj) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.deepest = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.deselect = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.deselectDeep = function() {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.disableDeselection = function() {};

/**
 * @public
 * @param {!inspiretree.NodeIteratee} iteratee
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.each = function(iteratee) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.editable = function(full) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.editing = function(full) {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.enableDeselection = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.InspireTree.prototype.expand = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.expandDeep = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.expanded = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.expandParents = function() {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} predicate
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.extract = function(predicate) {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} predicate
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.filterBy = function(predicate) {};

/**
 * @public
 * @param {function(!inspiretree.TreeNode, number=, ?=): boolean} predicate
 * @param {?=} thisArg
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.find = function(predicate, thisArg) {};

/**
 * @public
 * @param {function(!inspiretree.TreeNode): boolean} predicate
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.first = function(predicate) {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} predicate
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.flatten = function(predicate) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.focused = function(full) {};

/**
 * @public
 * @param {number} index
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.get = function(index) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.hidden = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.hide = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.hideDeep = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.indeterminate = function(full) {};

/**
 * @public
 * @param {number} index
 * @param {?} object
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.insertAt = function(index, object) {};

/**
 * @public
 * @param {?} methods
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.invoke = function(methods) {};

/**
 * @public
 * @param {?} methods
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.invokeDeep = function(methods) {};

/**
 * @public
 * @param {string} eventName
 * @return {boolean}
 */
inspiretree.InspireTree.prototype.isEventMuted = function(eventName) {};

/**
 * @public
 * @param {?} value
 * @return {boolean}
 */
inspiretree.InspireTree.isTreeNode = function(value) {};

/**
 * @public
 * @param {?} value
 * @return {boolean}
 */
inspiretree.InspireTree.isTreeNodes = function(value) {};

/**
 * @public
 * @param {function(!inspiretree.TreeNode): boolean} predicate
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.last = function(predicate) {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.lastSelectedNode = function() {};

/**
 * @public
 * @param {?} loader
 * @return {?}
 */
inspiretree.InspireTree.prototype.load = function(loader) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.loading = function(full) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.matched = function(full) {};

/**
 * @public
 * @param {number} index
 * @param {number} newIndex
 * @param {!inspiretree.TreeNodes} target
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.move = function(index, newIndex, target) {};

/**
 * @public
 * @param {?} events
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.mute = function(events) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.InspireTree.prototype.muted = function() {};

/**
 * @public
 * @param {(string|number)} id
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.node = function(id) {};

/**
 * @public
 * @param {?=} ids
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.nodes = function(ids) {};

/**
 * @public
 * @return {!inspiretree.Pagination}
 */
inspiretree.InspireTree.prototype.pagination = function() {};

/**
 * @public
 * @param {!inspiretree.NodeIteratee} iteratee
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.recurseDown = function(iteratee) {};

/**
 * @public
 * @return {?}
 */
inspiretree.InspireTree.prototype.reload = function() {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.removeAll = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.removed = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.restore = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.restoreDeep = function() {};

/**
 * @public
 * @param {?} query
 * @return {?}
 */
inspiretree.InspireTree.prototype.search = function(query) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.select = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.selectable = function(full) {};

/**
 * @public
 * @param {!inspiretree.TreeNode} start
 * @param {!inspiretree.TreeNode} end
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.selectBetween = function(start, end) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.selectDeep = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.selected = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.InspireTree.prototype.selectFirstAvailableNode = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.show = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.showDeep = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.softRemove = function() {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} sorter
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.sortBy = function(sorter) {};

/**
 * @public
 * @param {string} key
 * @param {boolean} val
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.state = function(key, val) {};

/**
 * @public
 * @param {string} key
 * @param {boolean} val
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.stateDeep = function(key, val) {};

/**
 * @public
 * @param {!inspiretree.TreeNode} node1
 * @param {!inspiretree.TreeNode} node2
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.swap = function(node1, node2) {};

/**
 * @public
 * @return {?}
 */
inspiretree.InspireTree.prototype.toArray = function() {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.tree = function() {};

/**
 * @public
 * @param {?} events
 * @return {!inspiretree.InspireTree}
 */
inspiretree.InspireTree.prototype.unmute = function(events) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.InspireTree.prototype.visible = function(full) {};

/**
 * tsickle: dropped extends: type without symbol
 * @constructor
 * @struct
 * @public
 * @param {!inspiretree.InspireTree} tree
 * @param {?=} array
 */
inspiretree.TreeNodes = function(tree, array) {};

/**
 * @public
 * @param {!inspiretree.NodeConfig} node
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.addNode = function(node) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.available = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.blur = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.blurDeep = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.checked = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.clean = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.clone = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.collapse = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.collapsed = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.collapseDeep = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.context = function() {};

/**
 * @public
 * @param {!inspiretree.InspireTree} dest
 * @param {boolean=} hierarchy
 * @param {boolean=} includeState
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.copy = function(dest, hierarchy, includeState) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.deepest = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.deselect = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.deselectDeep = function() {};

/**
 * @public
 * @param {!inspiretree.NodeIteratee} iteratee
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.each = function(iteratee) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.editable = function(full) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.editing = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.expand = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNodes.prototype.expandDeep = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.expanded = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.expandParents = function() {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} predicate
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.extract = function(predicate) {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} predicate
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.filterBy = function(predicate) {};

/**
 * @public
 * @param {function(!inspiretree.TreeNode, number, ?): boolean} predicate
 * @param {?=} thisArg
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.find = function(predicate, thisArg) {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} predicate
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.flatten = function(predicate) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.focused = function(full) {};

/**
 * @public
 * @param {number} index
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.get = function(index) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.hidden = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.hide = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.hideDeep = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.indeterminate = function(full) {};

/**
 * @public
 * @param {number} index
 * @param {?} object
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.insertAt = function(index, object) {};

/**
 * @public
 * @param {?} methods
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.invoke = function(methods) {};

/**
 * @public
 * @param {?} methods
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.invokeDeep = function(methods) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.loading = function(full) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.matched = function(full) {};

/**
 * @public
 * @param {number} index
 * @param {number} newIndex
 * @param {!inspiretree.TreeNodes} target
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.move = function(index, newIndex, target) {};

/**
 * @public
 * @param {(string|number)} id
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNodes.prototype.node = function(id) {};

/**
 * @public
 * @param {?=} ids
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.nodes = function(ids) {};

/**
 * @public
 * @return {!inspiretree.Pagination}
 */
inspiretree.TreeNodes.prototype.pagination = function() {};

/**
 * @public
 * @param {!inspiretree.NodeIteratee} iteratee
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.recurseDown = function(iteratee) {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.removed = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.restore = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.restoreDeep = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.select = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.selectable = function(full) {};

/**
 * @public
 * @param {!inspiretree.TreeNode} start
 * @param {!inspiretree.TreeNode} end
 * @return {!inspiretree.InspireTree}
 */
inspiretree.TreeNodes.prototype.selectBetween = function(start, end) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.selectDeep = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.selected = function(full) {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.show = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.showDeep = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.softRemove = function() {};

/**
 * @public
 * @param {(string|!inspiretree.NodeIteratee)} sorter
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.sortBy = function(sorter) {};

/**
 * @public
 * @param {string} key
 * @param {boolean} val
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.state = function(key, val) {};

/**
 * @public
 * @param {string} key
 * @param {boolean} val
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.stateDeep = function(key, val) {};

/**
 * @public
 * @param {!inspiretree.TreeNode} node1
 * @param {!inspiretree.TreeNode} node2
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.swap = function(node1, node2) {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNodes.prototype.toArray = function() {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.TreeNodes.prototype.tree = function() {};

/**
 * @public
 * @param {boolean=} full
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNodes.prototype.visible = function(full) {};
/**
 * @record
 * @struct
 */
inspiretree.TreeNode = function() {};
/** @type {(boolean|!inspiretree.TreeNodes)} */
inspiretree.TreeNode.prototype.children;
/** @type {string} */
inspiretree.TreeNode.prototype.text;
/** @type {string} */
inspiretree.TreeNode.prototype.id;
/** @type {{a: {attributes: ?}, icon: string, li: {attributes: ?}, state: ?}} */
inspiretree.TreeNode.prototype.itree;

/**
 * @public
 * @param {!inspiretree.NodeConfig} node
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.addChild = function(node) {};

/**
 * @public
 * @param {?} nodes
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNode.prototype.addChildren = function(nodes) {};

/**
 * @public
 * @param {...?} sources
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.assign = function(sources) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.available = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.blur = function() {};

/**
 * @public
 * @param {boolean=} shallow
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.check = function(shallow) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.checked = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.clean = function() {};

/**
 * @public
 * @param {?=} excludeKeys
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.clone = function(excludeKeys) {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.collapse = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.collapsed = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNode.prototype.context = function() {};

/**
 * @public
 * @param {!inspiretree.InspireTree} dest
 * @param {boolean=} hierarchy
 * @param {boolean=} includeState
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.copy = function(dest, hierarchy, includeState) {};

/**
 * @public
 * @param {boolean=} excludeNode
 * @param {boolean=} includeState
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.copyHierarchy = function(excludeNode, includeState) {};

/**
 * @public
 * @param {boolean=} shallow
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.deselect = function(shallow) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.editable = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.editing = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNode.prototype.expand = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.expanded = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.expandParents = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.focus = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.focused = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNode.prototype.getChildren = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.getParent = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNode.prototype.getParents = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNode.prototype.getTextualHierarchy = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hasAncestor = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hasChildren = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hasLoadedChildren = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hasOrWillHaveChildren = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hasParent = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hasVisibleChildren = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.hidden = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.hide = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.indeterminate = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNode.prototype.indexList = function() {};

/**
 * @public
 * @return {string}
 */
inspiretree.TreeNode.prototype.indexPath = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.isFirstRenderable = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.isLastRenderable = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.isOnlyRenderable = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.lastDeepestVisibleChild = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNode.prototype.loadChildren = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.loading = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.markDirty = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNodes}
 */
inspiretree.TreeNode.prototype.matched = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.nextVisibleAncestralSiblingNode = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.nextVisibleChildNode = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.nextVisibleNode = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.nextVisibleSiblingNode = function() {};

/**
 * @public
 * @return {!inspiretree.Pagination}
 */
inspiretree.TreeNode.prototype.pagination = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.previousVisibleNode = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.previousVisibleSiblingNode = function() {};

/**
 * @public
 * @param {!inspiretree.NodeIteratee} iteratee
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.recurseDown = function(iteratee) {};

/**
 * @public
 * @param {!inspiretree.NodeIteratee} iteratee
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.recurseUp = function(iteratee) {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.refreshIndeterminateState = function() {};

/**
 * @public
 * @return {?}
 */
inspiretree.TreeNode.prototype.reload = function() {};

/**
 * @public
 * @param {boolean=} includeState
 * @return {?}
 */
inspiretree.TreeNode.prototype.remove = function(includeState) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.removed = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.renderable = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.rendered = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.restore = function() {};

/**
 * @public
 * @param {boolean=} shallow
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.select = function(shallow) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.selectable = function() {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.selected = function() {};

/**
 * @public
 * @param {(string|number)} key
 * @param {?} val
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.set = function(key, val) {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.show = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.softRemove = function() {};

/**
 * @public
 * @param {(string|!Object)} key
 * @param {boolean=} val
 * @return {(boolean|!Object)}
 */
inspiretree.TreeNode.prototype.state = function(key, val) {};

/**
 * @public
 * @param {?} keys
 * @param {boolean} val
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.states = function(keys, val) {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.toggleCheck = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.toggleCollapse = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.toggleEditing = function() {};

/**
 * @public
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.toggleSelect = function() {};

/**
 * @public
 * @param {boolean=} excludeChildren
 * @param {boolean=} includeState
 * @return {?}
 */
inspiretree.TreeNode.prototype.toObject = function(excludeChildren, includeState) {};

/**
 * @public
 * @return {string}
 */
inspiretree.TreeNode.prototype.toString = function() {};

/**
 * @public
 * @return {!inspiretree.InspireTree}
 */
inspiretree.TreeNode.prototype.tree = function() {};

/**
 * @public
 * @param {boolean=} shallow
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.uncheck = function(shallow) {};

/**
 * @public
 * @param {!inspiretree.NodeConfig} node
 * @return {!inspiretree.TreeNode}
 */
inspiretree.TreeNode.prototype.unshiftChild = function(node) {};

/**
 * @public
 * @return {boolean}
 */
inspiretree.TreeNode.prototype.visible = function() {};


/** @suppress {duplicate} */
var module$exports$inspiretree = inspiretree;
